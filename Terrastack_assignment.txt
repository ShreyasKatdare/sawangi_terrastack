%%% Template originaly created by Karol KozioÅ‚ (mail@karol-koziol.net) and modified for ShareLaTeX use

%\documentclass[a4paper,11pt]{article}
\documentclass[a4paper, 12pt]{article}
\usepackage[left=1in, right=1in, top=1in, bottom=1in]{geometry} % Adjust margins
\usepackage{booktabs}
\usepackage{amsmath} 
\usepackage{amsfonts} 
\usepackage[utf8]{inputenc}
\usepackage{graphicx}
\usepackage{hyperref}

\usepackage{csvsimple}
\renewcommand\familydefault{\sfdefault}
\usepackage{tgheros}
%\usepackage[defaultmono]{droidmono}

\usepackage{amsmath,amssymb,amsthm,textcomp}
\usepackage{enumerate}
\usepackage{multicol}
\usepackage{tikz}

\usepackage{geometry}
\geometry{left=25mm,right=25mm,%
bindingoffset=0mm, top=20mm,bottom=20mm}

\usepackage{listings}
\usepackage{color}

% Define colors
\definecolor{dkgreen}{rgb}{0,0.6,0}
\definecolor{gray}{rgb}{0.5,0.5,0.5}
\definecolor{mauve}{rgb}{0.58,0,0.82}

% Define SQL style
\lstset{
  language=SQL,
  basicstyle={\small\ttfamily},
  belowskip=3mm,
  breakatwhitespace=true,
  breaklines=true,
  classoffset=0,
  columns=flexible,
  commentstyle=\color{dkgreen},
  framexleftmargin=0.25em,
  frameshape={}{yy}{}{},
  keywordstyle=\color{blue},
  numbers=none,
  numberstyle=\tiny\color{gray},
  showstringspaces=false,
  stringstyle=\color{mauve},
  tabsize=3,
  xleftmargin=1em
}

\linespread{1.3}

\newcommand{\linia}{\rule{\linewidth}{0.5pt}}

% custom theorems if needed
\newtheoremstyle{mytheor}
    {1ex}{1ex}{\normalfont}{0pt}{\scshape}{.}{1ex}
    {{\thmname{#1 }}{\thmnumber{#2}}{\thmnote{ (#3)}}}

\theoremstyle{mytheor}
\newtheorem{defi}{Definition}

% my own titles
\makeatletter
\renewcommand{\maketitle}{

\vspace{2ex}
{\huge \textsc{\@title}}
\vspace{1ex}
\\
\linia\\
\@author  \hfill \@date\\
% \begin{flushleft} % Left-align the links
\textit{GitHub:} \href{https://github.com/ShreyasKatdare/sawangi_terrastack.git}{https://github.com/ShreyasKatdare/sawangi\_terrastack.git} \\
\textit{Google Drive:} \href{https://drive.google.com/drive/folders/1teOWXgW4xYU-LwMww5vxas_YbaP7PbWO?usp=drive_link}{here} \\
\linia\\
}
\makeatother
%%%

% custom footers and headers
\usepackage{fancyhdr}
\pagestyle{fancy}
\lhead{}
\chead{}
\rhead{}
\lfoot{Terrastack Internship Assignment}
\cfoot{}
\rfoot{Page \thepage}
\renewcommand{\headrulewidth}{0pt}
\renewcommand{\footrulewidth}{0pt}
%



%%%----------%%%----------%%%----------%%%----------%%%

\begin{document}

\title{Terrastack Internship Assignment}

\author{Shreyas Katdare, 22B0636}

\date{31/03/2024}

\maketitle
\section*{Problem 1}
In this, we have to load the sawangi.shp shapefile into QGIS. So first I made new connection between sawangi\_test database in pgAdmin application and QGIS and then added the sawangi.shp shapefile into QGIS.
\begin{figure}[h]
    \centering
    \includegraphics[width=0.5\textwidth]{sawangi_plot.png}
    \caption{Sawangi Village Plot}
    \label{fig:Sawangi Village Plot}
\end{figure}
\\
I am utilizing pgAdmin to interact with SQL queries and facilitate connectivity between QGIS and the database. This involves employing SQL commands within pgAdmin to manage and query spatial data, enabling seamless integration with QGIS for geospatial analysis and visualization.
\begin{figure}[h]
    \centering
    \includegraphics[width=0.6\textwidth]{pg_admin.png}
    \caption{pgAdmin interface}
    \label{fig:pgAdmin interface}
\end{figure}
\pagebreak
\section*{Problem 2}
To get datatypes of all columns, we will use following query code
\begin{lstlisting}
SELECT column_name, data_type
FROM information_schema.columns
WHERE table_name = 'sawangi';
\end{lstlisting}

This gives following output :
\begin{table}[h]
\centering
\caption{Datatype of columns}
\begin{tabular}{ll}
\toprule
\textbf{column\_name} & \textbf{data\_type} \\
\midrule
id & integer \\
geom & USER-DEFINED \\
gid & bigint \\
ccode & character varying \\
pin & character varying \\
dtncode & character varying \\
thncode & character varying \\
vincode & character varying \\
vil\_name & character varying \\
dtname & character varying \\
thname & character varying \\
cncode11 & character varying \\
cncode01 & character varying \\
lgd\_code & character varying \\
ef\_code & character varying \\
\bottomrule
\end{tabular}
\end{table}
\\
In this id column has datatype of 'INTEGER', gid column has datatype 'BIGINT', geom column is user-defined datatype to store shapes like points, lines, or polygons, whereas other columns have datatype 'VARCHAR' to store string of variable length.
\pagebreak
\section*{Problem 3}
\subsection*{3.1}
To find number of polygons with an area greater than 5 Ha, we will use following query code :
\begin{lstlisting}
--5 Hectare = 50000 sqm
SELECT COUNT(*) AS num_polygons
FROM sawangi
WHERE ST_Area(geom) > 50000;
\end{lstlisting}

Output :
\begin{figure}[h]
    \centering
    \includegraphics[width=0.5\textwidth]{3.1.png}
    \caption{Output for Problem 3.1}
    \label{fig:Output for Problem 3.1}
\end{figure}

\subsection*{3.2}
First let's check how many rows have pin as 'null'.
\begin{lstlisting}
SELECT COUNT(*) AS num_null_pins
FROM sawangi
WHERE pin IS NULL;
\end{lstlisting}
Output :
\begin{figure}[h]
    \centering
    \includegraphics[width=0.5\textwidth]{3.2_no.of.png}
    \caption{Output for Problem 3.2 : Number rows having null pin}
    \label{fig:Output for Problem 3.2 : Number rows having null pin}
\end{figure}
%\pagebreak
\\
Now let's delete these rows i.e. ploygons corresponding to these rows :
\begin{lstlisting}
DELETE FROM sawangi
WHERE pin IS NULL;
\end{lstlisting}
Output :
\begin{figure}[h]
    \centering
    \includegraphics[width=0.5\textwidth]{num_deleted.png}
    \caption{Output for Problem 3.2 : Deleted rows}
    \label{fig:Output for Problem 3.2 : Deleted rows}
\end{figure}
\\
Now if we check remaining rows :
\begin{lstlisting}
SELECT COUNT(*) AS num_plots_remaining
FROM sawangi
\end{lstlisting}

Output :
\begin{figure}[h]
    \centering
    \includegraphics[width=0.5\textwidth]{num_remaining.png}
    \caption{Output for Problem 3.2 : Number of remaining rows}
    \label{fig:Output for Problem 3.2 : Number of remaining rows}
\end{figure}

Yeah ! At start there were 501 rows and we deleted 17 rows so indeed remaining rows are 484.
\\
After deletion, the plot looks like this :
\begin{figure}[h]
    \centering
    \includegraphics[width=0.5\textwidth]{plot_after_delete.png}
    \caption{Output for Problem 3.2 : Sawangi plot after deletion}
    \label{fig:Output for Problem 3.2 : Sawangi Plot after delete}
\end{figure}

\section*{Problem 3}
Now let's calculate the outer total perimeter of the sawangi village. For this we will first take union of all polygons to make the polygon which encloses the village and then use ST\_perimeter to find its perimeter. Also we should do this before deleting the rows i.e. on original plot!
\begin{lstlisting}
--sawangi_og is original table
WITH union_polygon AS (
    SELECT ST_Union(geom) AS geom
    FROM sawangi_og
)
-- Calculate perimeter of the union polygon
SELECT ST_Perimeter(geom) AS perimeter
FROM union_polygon;
\end{lstlisting}
Output:
\begin{figure}[h]
    \centering
    \includegraphics[width=0.5\textwidth]{perimeter.png}
    \caption{Output for Problem 3.3 : Perimeter of Village}
    \label{fig:Output for Problem 3.3 : Perimeter of Village}
\end{figure}
\\
So the total perimeter of village is $15551.2373$ $m^2$ 
\end{document}
